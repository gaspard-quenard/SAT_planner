To initialize a project: gradle init


compile and execute:

./gradlew run

Compile and execute with arguments:

./gradlew run --args="--help"


// For now, give full path
./gradlew run --args="/home/gaspard/Programming/AI_Planning/demo/benchmarks/simple_example/domain.pddl /home/gaspard/Programming/AI_Planning/demo/benchmarks/simple_example/problem.pddl"

./gradlew run --args="/home/gaspard/Programming/AI_Planning/demo/benchmarks/pddl/ipc1998/logistics/adl/domain.pddl /home/gaspard/Programming/AI_Planning/demo/benchmarks/pddl/ipc1998/logistics/adl/p01.pddl"

./gradlew run --args="/home/gaspard/Programming/AI_Planning/demo/benchmarks/pddl/ipc1998/logistics/strips-round1/domain.pddl /home/gaspard/Programming/AI_Planning/demo/benchmarks/pddl/ipc1998/logistics/strips-round1/p01.pddl"


TO CHECK PLAN:

./VAL/bin/Validate /home/gaspard/Programming/AI_Planning/demo/benchmarks/simple_example/domain.pddl /home/gaspard/Programming/AI_Planning/demo/benchmarks/simple_example/problem.pddl /home/gaspard/Programming/AI_Planning/demo/benchmarks/simple_example/plan/plan.txt


./VAL/bin/Validate /home/gaspard/Programming/AI_Planning/demo/benchmarks/pddl/ipc1998/logistics/strips-round1/domain.pddl /home/gaspard/Programming/AI_Planning/demo/benchmarks/pddl/ipc1998/logistics/strips-round1/p01.pddl /home/gaspard/Programming/AI_Planning/demo/benchmarks/plans/plan.txt


UNDERSTAND WHY PLAN IS INVALID !!

./gradlew run --args="/home/gaspard/Programming/AI_Planning/demo/benchmarks/invalid_tests/domain.pddl /home/gaspard/Programming/AI_Planning/demo/benchmarks/invalid_tests/p01.pddl"

./VAL/bin/Validate -v /home/gaspard/Programming/AI_Planning/demo/benchmarks/invalid_tests/domain.pddl /home/gaspard/Programming/AI_Planning/demo/benchmarks/invalid_tests/p01.pddl /home/gaspard/Programming/AI_Planning/demo/benchmarks/invalid_tests/plan.txt

SOME POSITIVE FLUENT ARE MISSING ON SOME ACTIONS ?!!? action.getPrecondition().getPositiveFluents() does not return all the positive fluents sometimes ?!!? I think that I do not have understand BitVector

SEEMS LIKE THE ORDER OF THE ACTIONS IS WRONG ?!

To understand fluent: 

ALl the fluents map are in the variable 
problem.mapOfFluentIndex


In it, it indicate for each fluent ->
    its arguments (here 2 -> 0 1) -> argugment can be found in constantSymbols 0: "r1", 1: "loc1", 2:"loc2"
    its value which is an int different for each fluent here 0 ((at r1, l1) and (at r1, l2) will have different values)


All the fluent are in the variable:
problem.getFluents()

each fluent can be print as string (e.g: problem.getFluents().get(0).toString())
which return: "(0 0 1)" -> "(<fluent_symbol>, <arg1>, <arg2>)" where arg1...n are constantSymbols fluent_symbol can be obtained with the predicatesSymbols ()


To get the initial fluents:

problem.getInitialState().getPositiveFluents() -> return the values of all the fluents that holds true at the inital state



Questions: 

Sur l'implémentation pourquoi problem.getFluent renvoie une class list de class Fluent tandis que problem.getInitialState().getPositiveFluents() renvoie in bitVector

Pour les slides de cours, sur la page action (page 12, ça ne devrait pas être a_i+1 pour les effets ?)


NOTES: 

CODE does not seems to work on ADDL ?!?